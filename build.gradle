import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.16.1",
    selenideVersion = "5.25.0",
    junitVersion = "5.8.1"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    reportDir = file("$projectDir/allure-report")
    resultsDir = file("$projectDir/build/allure-results")
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.7",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-junit5:$allureVersion",
            "org.assertj:assertj-core:3.21.0",
            "com.github.javafaker:javafaker:1.0.2",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.aeonbits.owner:owner:1.0.12")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.32",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")

}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    systemProperty 'allure.results.directory', "$projectDir/build/allure-results"
    systemProperty 'allure.reportss.directory', "$projectDir/allure-reports"
    systemProperty "file.encoding", "utf-8"

    useJUnitPlatform()

    testLogging {
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.SHORT
        }
    }
